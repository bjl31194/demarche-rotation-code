#import libraries
library(ggplot2)
library(tidyverse)
#import data
phenology_data <- read.csv("~/Github/demarche-rotation-code/Phenology_data_2021.csv")
View(phenology_data)
phenology_data <- read.csv("~/Github/demarche-rotation-code/Phenology_data_2021.csv")
View(phenology_data)
#remove B values and replace with zero
flowering_data[flowering_data == "B"] <- 0
#get rid of commas and sum values
for(i in 3:ncol(flowering_data)) {
if(is.character(flowering_data[ , i])) {
flowering_data[ , i] <- sapply(strsplit(flowering_data[ , i],","), function(x) sum(as.integer(x)))
}
}
sum(flowering_data[9])
#dataframe with only flowering data, site, and plot info
flowering_data <- phenology_data
#remove B values and replace with zero
flowering_data[flowering_data == "B"] <- 0
#get rid of commas and sum values
for(i in 3:ncol(flowering_data)) {
if(is.character(flowering_data[ , i])) {
flowering_data[ , i] <- sapply(strsplit(flowering_data[ , i],","), function(x) sum(as.integer(x)))
}
}
sum(flowering_data[9])
warnings()
View(flowering_data)
#import libraries
library(ggplot2)
library(tidyverse)
#import data
phenology_data <- read.csv("~/Github/demarche-rotation-code/Phenology_data_2021.csv")
phenology_data <- subset(phenology_data, select = -c(X.1,X.2,X.3,X.4))
#dataframe with only flowering data, site, and plot info
flowering_data <- subset(phenology_data, select = -c(X,Y,TP,Comments,Sex,Pollination))
#remove B values and replace with zero
flowering_data[flowering_data == "B"] <- 0
#get rid of commas and sum values
for(i in 3:ncol(flowering_data)) {
if(is.character(flowering_data[ , i])) {
flowering_data[ , i] <- sapply(strsplit(flowering_data[ , i],","), function(x) sum(as.integer(x)))
}
}
#get max flower numbers for each individual
flowering_data$Max <- apply(flowering_data[3:18], MARGIN =  1, FUN = max, na.rm = T)
#filter out individuals with no recorded flowers and get which dates contain max numbers of flowers
flowering_data_filtered <- flowering_data[!(flowering_data$Max==0),]
flowering_data_filtered$Peak <- apply(flowering_data_filtered,1,which.max)
# make new column containing peak flowering dates
for(i in 1:length(flowering_data_filtered$Peak)){
flowering_data_filtered$Peak_dates[i] <- colnames(flowering_data_filtered[flowering_data_filtered$Peak[i]])
}
#make df with only control samples and early samples
flowering_data_control <- subset(flowering_data_filtered, Plot %in% c("C","CA","CB","CC"))
flowering_data_early <- subset(flowering_data_filtered, Plot %in% c("E","EA","EB","EC"))
#make new df with only peak dates and make it not classed as a list
peak_dates_control <- subset(flowering_data_control, select = c(Site, Peak_dates))
peak_dates_control <- as.data.frame(lapply(peak_dates_control, unlist))
peak_dates_early <- subset(flowering_data_early, select = c(Site, Peak_dates))
peak_dates_early <- as.data.frame(lapply(peak_dates_early, unlist))
#plot as density graph
peak_dates_control$Treatment <- "C"
peak_dates_early$Treatment <- "E"
total_peak_dates <- bind_rows(peak_dates_control,peak_dates_early)
total_peak_dates <- replace_na(total_peak_dates, list(Treatment="E"))
total_peak_dates$Peak_dates = sub('X', '', total_peak_dates$Peak_dates)
total_peak_dates$Peak_dates <- as.Date(total_peak_dates$Peak_dates, format='%m.%d.%y')
ggplot(total_peak_dates, aes(x = Peak_dates, fill = Treatment)) +
#geom_histogram(position = "identity", alpha = 0.5) +
geom_density(aes(y=..count..), adjust=4, alpha = 0.5) +
labs(title = "Peak Flowering Distributions in \n Simulated Early Snowmelt Plots vs. Control", x = "Peak Flowering Dates", y = "Frequency") +
theme(
plot.title = element_text(hjust = 0.4), axis.text.x = element_text(angle = -80)
) +
facet_wrap(vars(Site))
View(total_peak_dates)
View(total_peak_dates)
View(total_peak_dates)
with(flowering_data, sum(flowering_data["Site" == T1, "Jun.21.2021"]))
with(flowering_data, sum(flowering_data[Site == T1, "Jun.21.2021"]))
with(flowering_data, sum(flowering_data[flowering_data[1] == T1, "Jun.21.2021"]))
with(flowering_data, sum(flowering_data["Site" == "T1", "Jun.21.2021"]))
#dataframe with only flowering data, site, and plot info
flowering_data <- phenology_data
#remove B values and replace with zero
flowering_data[flowering_data == "B"] <- 0
#get rid of commas and sum values
for(i in 9:ncol(flowering_data)) {
if(is.character(flowering_data[ , i])) {
flowering_data[ , i] <- sapply(strsplit(flowering_data[ , i],","), function(x) sum(as.integer(x)))
}
}
with(flowering_data, sum(flowering_data["Site" == "T1", "Jun.21.2021"]))
View(flowering_data)
with(flowering_data, sum(flowering_data[Site == "T1", "Jun.21.2021"]))
View(flowering_data)
Dates <- c(colnames(flowering_data, flowering_data[9:ncols(flowering_data)]),colnames(flowering_data, flowering_data[9:ncols(flowering_data)]))
Dates <- c(colnames(flowering_data, flowering_data[9:ncol(flowering_data)]),colnames(flowering_data, flowering_data[9:ncols(flowering_data)]))
Dates <- c(colnames(flowering_data, flowering_data[9:ncol(flowering_data)]))
colnames(flowering_data, flowering_data[9:ncol(flowering_data)])
Dates <- c(colnames(flowering_data[9:ncol(flowering_data)]))
Dates
Dates <- c(colnames(flowering_data[9:ncol(flowering_data)]),colnames(flowering_data[9:ncol(flowering_data)]),colnames(flowering_data[9:ncol(flowering_data)]),colnames(flowering_data[9:ncol(flowering_data)]),colnames(flowering_data[9:ncol(flowering_data)]))
Dates
Dates <- c(colnames(flowering_data[9:ncol(flowering_data)]))
Sites <- c('T1','T2','T3','T4','T5')
for(k in Dates) {
for(j in Sites) {
Flowers <- with(flowering_data, sum(flowering_data[Site == j, k]))
}
}
Flowers
Dates <- c(colnames(flowering_data[9:ncol(flowering_data)]))
Sites <- c('T1','T2','T3','T4','T5')
for(k in Dates) {
for(j in Sites) {
Flowers <- c(with(flowering_data, sum(flowering_data[Site == j, k])))
}
}
